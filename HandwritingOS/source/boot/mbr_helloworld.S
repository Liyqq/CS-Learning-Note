;主引导程序 Master Boot Record
;---------------------------------------------------------------------------
SECTION MBR vstart=0x7c00
    mov ax, cs
    mov ds, ax
    mov es, ax
    mov ss, ax
    mov fs, ax
    mov sp, 0x7c00

;清屏利用BOIS提供的0x06号功能，上卷全部行，则可清屏。
;---------------------------------------------------------------------------
;INT 0x10  功能号：0x06  功能描述：上卷窗口
;---------------------------------------------------
;输入：
;AH 功能号=0x06
;AL = 上卷的行数（若为0，则表示全部行）
;BH = 上卷的行属性
;(CL, CH) = 窗口左上角的坐标(X, Y)
;(DL, DH) = 窗口右下角的坐标(X, Y)
;返回值： 无
    mov ax, 0x0600
    mov bx, 0x0700
    mov cx, 0x0000          ;左上角(0, 0)
    mov dx, 0x184f          ;右下角(80, 25)
                            ;VGA文本模式下，一行只能容纳80个字符，共25行
                            ;下标从0开始，则0x18=24,0x4f=79
    int 0x10
;;;;;;;;;;  获取光标位置  ;;;;;;;;;;
;.get_cursor获取当前光标位置，在光标处打印字符。
    mov ah, 0x03            ;输入：3号子功能是获取光标位置，存入AH中
    mov bh, 0x00            ;BH寄存器存储是待获取光标页号

    int 0x10                ;输出：CH=光标开始行，CL=光标结束行
                            ;DH=光标所在行号，DL=光标所在列号

;;;;;;;;;;  获取光标位置结束  ;;;;;;;;;;

;;;;;;;;;;  打印字符串   ;;;;;;;;;;
;同样使用0x10号中断，但是此次调用13号子功能打印字符串
    mov ax, message
    mov bp, ax              ;ES:BP为串首地址，ES此时通CS一致
                            ;开头时已经为SREG初始化

;光标位置需要用到DX寄存器中内容，CX中光标的位置可以忽略                    
    mov cx, msglength       ;CX中为字符串长度，不包括结束符'\0'的字符个数
    mov ax, 0x1301          ;子功能号13显示字符及属性，要存入AH寄存器，即AH=0x13；
                            ;AL设置写字符的方式AL=0x01，即显示字符串，光标跟随移动。
    mov bx, 0x0002          ;BH中指定要显示的页号，此处使用的是第0页
                            ;BL中指定字符属性，属性黑底绿字(BL=0x02)
    int 0x10                ;执行BIOS 0x10号中断
;;;;;;;;;;  打印字符串结束   ;;;;;;;;;;
    
    jmp $                   ;程序悬停于此

    message db "Hello World MBR!"
    msglength equ $ - message
    times 510-($-$$) db 0   ;填充最后两字节前的空间
    db 0x55, 0xaa
    